import Head from 'next/head'
import Link from 'next/link'
import { gql } from "@apollo/client";
import { getApolloClient } from "../lib/apollo";



export default function Page({ page, site }) {
  return (
    <div >
      <Head>
        <title>{ page.title }</title>
        <meta name="description" content={`Read more about ${page.title} on ${site.title}`} />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main >
        <h1>
          { page.title }
        </h1>

        <div >
          <div dangerouslySetInnerHTML={{
            __html: page.content
          }} />
        </div>

        <p >
          <Link href="/">
            <a>
              &lt; Back to home
            </a>
          </Link>
        </p>
      </main>
    </div>
  )
}

export async function getStaticProps({ params = {} } = {}) {
  const { pageSlug } = params;

  const apolloClient = getApolloClient();

  const data = await apolloClient.query({
    query: gql`
      query pageBySlug($slug: String!) {
        generalSettings {
          title
        }
        pageBy(slug: $slug) {
          id
          content
          title
          slug
        }
      }
    `,
    variables: {
      slug: pageSlug
    }
  });

  const page = data?.data.pageBy;

  if ( !page ) {
    return {
      props: {},
      notFound: true
    }
  }

  const site = {
    ...data?.data.generalSettings
  }

  return {
    props: {
      page,
      site
    }
  }
}

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: 'blocking'
  }
}